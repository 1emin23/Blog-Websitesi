<!-- =========================
   Improved Comment Section
   ========================= -->
<section class="comments" id="comments">
    <h2 class="comments__title">Yorumlar</h2>

    <% if (post.comments && post.comments.length) { %>
        <ul class="comments__list">
            <% post.comments.forEach(comment=> { %>
                <li class="comment">
                    <!-- Avatar made from first letter of username -->
                    <div class="comment__avatar">
                        <%= comment.username.charAt(0).toUpperCase() %>
                    </div>

                    <div class="comment__body">
                        <header class="comment__header">
                            <span class="comment__username">
                                <%= comment.username %>
                            </span>
                            <time class="comment__date">
                                <%= new Date(comment.createdAt).toLocaleString('tr-TR') %>
                            </time>
                        </header>
                        <p class="comment__content">
                            <%= comment.content %>
                        </p>
                    </div>
                </li>
                <% }) %>
        </ul>
        <% } else { %>
            <p class="comments__empty">Henüz yorum yok.</p>
            <% } %>

                <% if (user) { %>
                    <form class="comment-form" id="commentForm">
                        <textarea id="commentContent" name="content" placeholder="Yorumunuzu yazın..." maxlength="500"
                            required></textarea>
                        <button type="submit" id="submitComment" class="btn">Yorum Yap</button>
                        <span class="error-message" id="errorMessage"></span>
                    </form>
                    <% } else { %>
                        <p class="comments__login">Yorum yapmak için <a href="/auth/login">giriş yapın</a>.</p>
                        <% } %>
</section>

<!-- =========================
        Styling
========================= -->
<style>
    :root {
        --clr-primary: #3498db;
        --clr-bg: #ffffff;
        --clr-surface: #f2f6fa;
        --clr-text: #2c3e50;
        --clr-muted: #7f8c8d;
        --radius: 1rem;
    }

    /* Wrapper */
    .comments {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem 1rem;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
    }

    .comments__title {
        font-size: 1.75rem;
        margin-bottom: 1.5rem;
        color: var(--clr-text);
        border-bottom: 2px solid var(--clr-surface);
        padding-bottom: .5rem;
    }

    /* List layout */
    .comments__list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin: 0;
        padding: 0;
        list-style: none;
    }

    /* Single comment card */
    .comment {
        display: flex;
        gap: 1rem;
        background: var(--clr-surface);
        padding: 1rem;
        border-radius: var(--radius);
        transition: box-shadow .2s ease;
    }

    .comment:hover {
        box-shadow: 0 2px 10px rgba(0, 0, 0, .08);
    }

    /* Avatar circle */
    .comment__avatar {
        width: 42px;
        height: 42px;
        flex-shrink: 0;
        background: var(--clr-primary);
        color: #fff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1rem;
        text-transform: uppercase;
    }

    .comment__body {
        flex: 1;
    }

    .comment__header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: .25rem;
    }

    .comment__username {
        font-weight: 600;
        color: var(--clr-text);
    }

    .comment__date {
        font-size: .825rem;
        color: var(--clr-muted);
    }

    .comment__content {
        color: var(--clr-text);
        line-height: 1.5;
        word-wrap: break-word;
    }

    /* Empty / login text */
    .comments__empty,
    .comments__login {
        text-align: center;
        color: var(--clr-muted);
        padding: 1rem 0;
    }

    /* Form */
    .comment-form {
        margin-top: 2rem;
        display: grid;
        gap: 1rem;
    }

    .comment-form textarea {
        width: 100%;
        min-height: 120px;
        padding: .75rem 1rem;
        border: 1px solid #e4e7ec;
        border-radius: var(--radius);
        resize: vertical;
        font-size: 1rem;
        font-family: inherit;
    }

    .comment-form textarea:focus {
        outline: 2px solid var(--clr-primary);
        border-color: transparent;
    }

    .btn {
        align-self: start;
        padding: .6rem 1.2rem;
        background: var(--clr-primary);
        color: #fff;
        border: none;
        border-radius: var(--radius);
        font-weight: 500;
        cursor: pointer;
        transition: background .2s;
    }

    .btn:hover {
        background: #2980b9;
    }

    .btn:disabled {
        background: #bdc3c7;
        cursor: not-allowed;
    }

    /* Error */
    .error-message {
        color: #e74c3c;
        font-size: .875rem;
        display: none;
    }

    /* Mobile */
    @media (max-width: 480px) {
        .comment {
            padding: .75rem;
        }

        .comment__avatar {
            width: 36px;
            height: 36px;
            font-size: .9rem;
        }

        .btn {
            width: 100%;
        }
    }
</style>

<!-- =========================
        Behaviour
========================= -->
<script>
    const form = document.getElementById('commentForm');
    if (form) {
        const commentContent = document.getElementById('commentContent');
        const submitButton = document.getElementById('submitComment');
        const errorMessage = document.getElementById('errorMessage');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            submitButton.disabled = true;
            errorMessage.style.display = 'none';

            const content = commentContent.value.trim();
            if (!content) {
                errorMessage.textContent = 'Yorum boş olamaz.';
                errorMessage.style.display = 'block';
                submitButton.disabled = false;
                return;
            }

            try {
                const response = await fetch('/user/comment/<%= post._id %>', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: new URLSearchParams({ content })
                });
                const data = await response.json();

                if (!response.ok) {
                    if (response.status === 401 && data.redirect) {
                        window.location.href = data.redirect;
                    } else {
                        errorMessage.textContent = data.message || 'Yorum eklenemedi.';
                        errorMessage.style.display = 'block';
                    }
                    submitButton.disabled = false;
                    return;
                }

                // Successfully added comment – refresh to display it
                window.location.reload();
            } catch (err) {
                console.error('Yorum ekleme hatası:', err);
                errorMessage.textContent = 'Bir hata oluştu.';
                errorMessage.style.display = 'block';
                submitButton.disabled = false;
            }
        });
    }
</script>